@page "/adoptionforms/delete"
@using Microsoft.EntityFrameworkCore
@using DogAdoptionApp.Models
@inject IDbContextFactory<DogAdoptionApp.Data.DogAdoptionAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>AdoptionForm</h2>
    <hr />
    @if (adoptionform is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@adoptionform.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DogName</dt>
            <dd class="col-sm-10">@adoptionform.DogName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@adoptionform.Address</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PhoneNumber</dt>
            <dd class="col-sm-10">@adoptionform.PhoneNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CurrentPets</dt>
            <dd class="col-sm-10">@adoptionform.CurrentPets</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MonthlyIncome</dt>
            <dd class="col-sm-10">@adoptionform.MonthlyIncome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ApprovalStatus</dt>
            <dd class="col-sm-10">@adoptionform.ApprovalStatus</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Reasoning</dt>
            <dd class="col-sm-10">@adoptionform.Reasoning</dd>
        </dl>
        <EditForm method="post" Model="adoptionform" OnValidSubmit="DeleteAdoptionForm" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(adoptionform is null)">Delete</button> |
            <a href="/adoptionforms">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private AdoptionForm? adoptionform;

    [SupplyParameterFromQuery]
    private int AdoptionFormID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        adoptionform = await context.AdoptionForm.FirstOrDefaultAsync(m => m.AdoptionFormID == AdoptionFormID);

        if (adoptionform is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteAdoptionForm()
    {
        using var context = DbFactory.CreateDbContext();
        context.AdoptionForm.Remove(adoptionform!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/adoptionforms");
    }
}
